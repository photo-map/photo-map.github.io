{"version":3,"sources":["Application/components/HelpTip.jsx","Application/Map/constants.js","Application/Map/AMap/helpers.js","Application/Map/AMap/constants.js","Application/Map/AMap/index.jsx","Application/utils/gapiRequest.js","Application/utils/gDriveFilesApi.js","Application/helpers/filesListHelpers.js","Application/constants.js","Application/MenuDrawer/FolderList.jsx","Application/Map/BaiduMap/helpers.js","Application/utils/utils.js","Application/Map/helpers.js","Application/Map/MapSelector.jsx","Application/MenuDrawer/Title.jsx","Application/helpers/renderGoogleLoginBtn.js","Application/MenuDrawer/GoogleLogin.jsx","Application/config.js","Application/MenuDrawer/helpers.js","Application/MenuDrawer/ConfigSection.jsx","Application/MenuDrawer/index.jsx","Application/components/Message/index.jsx","Application/Map/GoogleMap/ReactGoogleMaps/GoogleMapWrapper.jsx","Application/Map/GoogleMap/ReactGoogleMaps/GoogleMapCompose.jsx","Application/Map/GoogleMap/ReactGoogleMaps/PhotoMarker.jsx","Application/Map/GoogleMap/ReactGoogleMaps/helpers.js","Application/Map/GoogleMap/ReactGoogleMaps/index.jsx","Application/Map/GoogleMap/GoogleMapReact/index.jsx","Application/Map/GoogleMap/index.jsx","Application/Map/typedef.js","Application/Map/BaiduMap/index.jsx","Application/Map/index.jsx","Application/init.js","Application/Warning.jsx","Application/index.jsx","serviceWorker.js","index.js"],"names":["HelpTip","props","content","children","title","QuestionCircleOutlined","localStorageKeySelectedMap","FIT_MARKERS_TOPIC","getMarkersInFolder","map","folderId","markersInFolder","getAllOverlays","forEach","marker","getExtData","push","SHOW_MARKERS_TOPIC","HIDE_MARKERS_TOPIC","REMOVE_MARKERS_IN_FOLDER_TOPIC","debug","debugModule","ADD_MARKERS_TOPIC","REMOVE_ALL_MARKERS_TOPIC","AMap","allMarkers","addSubscribers","addMarkersToken","PubSub","subscribe","addMarkersSubscriber","removeAllMarkersToken","removeAllMarkersSubscriber","removeMarkersInFolderToken","removeMarkersInFolderSubscriber","showMarkersToken","showMarkersSubscriber","hideMarkersToken","hideMarkersSubscriber","fitMarkersToken","fitMarkersSubscriber","removeSubscribers","unsubscribe","msg","data","addMarkers","files","visible","removeMarkersInFolder","removeAllMarkers","filter","updateMarkersInFolderVisible","setFitView","console","error","show","hide","genMarker","photo","window","Marker","position","lnglat","icon","Icon","size","Size","image","thumbnail","imageSize","extData","lnglats","file","imageMediaMetadata","location","longitude","latitude","convertFrom","status","result","info","locations","resLnglat","index","thumbnailLink","webViewLink","on","event","infoWindow","InfoWindow","offset","Pixel","setContent","target","open","getPosition","alert","remove","this","defaultCenter","defaultZoom","events","created","instance","onMapInstanceCreated","click","mapsEvent","lngLat","log","toString","layers","TileLayer","Satellite","className","amapkey","process","version","center","zoom","Component","gapiRequest","requestOpts","Promise","resolve","reject","gapi","client","request","execute","resp","filesGet","params","a","path","fileId","filesList","filesFields","join","getFolderInfo","getPhotosInFolder","q","fields","getPhotoMapFolder","getPrivatePhotos","setMediaItems","foldersResp","id","GOOGLE_MAP","A_MAP","BAIDU_MAP","PRIVATE_FOLDER_ID","ADD_PUBLIC_FOLDER_TOPIC","localStorageKeyPublicFolders","localStorageKeyPrivateFolderVisible","encode","value","folderInfo","JSON","stringify","decode","parse","localStorage","getItem","FolderList","state","privateFolderVisible","publicFolders","handlePrivateFolderCheckboxChange","checked","updatePrivateFolderVisible","publish","openDrawerToken","addPublicFolderSubscriber","addPublicFolder","setState","setItem","newPublicFolderState","updatePublicFolderVisiable","newState","updateMarkersVisible","removePublicFolder","prevState","getPhotoCountInFolder","photoCountInFolder","folder","folders","find","length","renderPublicFolders","renderPublicFolder","onChange","folderName","onConfirm","onCancel","okText","cancelText","type","foldersToBMapPoints","points","lat","lng","convert","BMapGL","Convertor","translate","response","ret","Error","chunk","array","i","j","chunks","slice","getPhotosInPublicFolder","message","name","getPublicFoldersWithPhoto","foldersObj","all","Object","keys","addMarkersToAMap","privateFolder","getGpsBMapPointsMapping","gpsPoints","chunkOfGpsPoints","bMapPoints","responses","gpsBMapPointsMapping","item","gpsPoint","bMapPoint","radioStyle","display","height","lineHeight","MapSelector","selectedMap","Group","style","get","Title","OutboundLink","eventLabel","to","scopeNeeded","GoogleLogin","gapiAuth2Loaded","signedIn","handleSignOutBtnClick","auth2","getAuthInstance","signOut","then","ReactGA","category","action","onSignedOut","renderLoginBtn","googleAuth","isSignedIn","renderSignOutBtn","onClick","mounted","load","init","client_id","scope","attachClickHandler","user","onLoginSuccess","listen","currentUser","signin2","render","onsuccess","onfailure","b","c","onRenderFinish","renderGoogleLoginBtn","warn","link2Id","link","replace","exportConfig","storageObj","encodeURIComponent","importConfig","configObj","ConfigSection","handleDownload","href","downloadRef","current","handleImport","inputRef","handleChange","Response","text","obj","React","createRef","ref","download","OPEN_DRAWER_TOPIC","OPEN_CLOSE_DRAWER_TOPIC","MenuDrawer","drawerVisible","publicFolderLink","loading","handleDrawerClose","setVisible","handlePublicFolderLinkChange","handlePublicFolderInputPressEnter","loadPublicFolderAndAddMarkers","handleLoadPublicFolderBtnClick","undefined","openDrawerSubscriber","openCloseDrawerSubscriber","openCloseDrawerToken","width","placement","closable","forceRender","onClose","onMapChange","onPressEnter","disabled","Message","handleClick","latLng","GoogleMapWrapper","defaultOptions","mapTypeControlOptions","google","maps","ControlPosition","TOP_RIGHT","mapTypeId","refCallback","GoogleMapCompose","compose","withProps","ownerProps","googleMapURL","loadingElement","containerElement","mapElement","withHandlers","refs","onMapMounted","onMapUnmounted","withScriptjs","withGoogleMap","PhotoMarker","useState","setOpen","onCloseClick","url","rel","src","alt","fitGoogleMapMarkers","bounds","LatLngBounds","extend","fitBounds","GoogleMapComponent","locationGetFromGoogleMap","locationGetFromSateliteImage","GoogleMap","handleMapMounted","handleMapUnmounted","renderPhotoMarkers","markers","anchor","x","y","labelOrigin","scaledSize","mapRef","markerProps","label","AnyReactComponent","GoogleMapReactWrapper","handleApiLoaded","bootstrapURLKeys","key","yesIWantToUseGoogleMapApiInternals","onGoogleApiLoaded","googleMapReactEnabled","ReactGoogleMaps","locationType","PropTypes","shape","number","isRequired","altitude","imageMediaMetadataType","fileType","webContentLink","string","BaiduMap","arrayOf","bool","handleMapComponentMountOrUmount","folderIndex","fileIndex","setViewport","fitBMapMarkers","handleMapComponentMounted","amapCenter","googleMapCenter","baiduMapCenter","SWITCH_MAP_TOPIC","Map","handleMapChange","setMap","handleRenderFinish","handleLoginSuccess","privatePhotos","foundPrivateFolder","handleAMapInstanceCreated","amapLoaded","handleSignedOut","handleDrawerOpen","switchMapToken","switchMapSubscriber","newFolders","renderMap","renderMap2","initGa","initialize","registerShortcut","document","addEventListener","code","initGapiClient","Warning","Application","gapiLoaded","gapiClientLoading","initApplication","gapiLoadedFlag","loadGapiClient","Boolean","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.db6d741f.chunk.js","sourcesContent":["import React from \"react\";\nimport { Popover } from \"antd\";\nimport { QuestionCircleOutlined } from \"@ant-design/icons\";\n\nexport default function HelpTip(props) {\n  return (\n    <Popover content={props.children} title={null}>\n      <QuestionCircleOutlined />\n    </Popover>\n  );\n}\n","export const localStorageKeySelectedMap = \"pmap::selectedMap\";\n\n// Fitbounds to the markers showing on the map\nexport const FIT_MARKERS_TOPIC = \"googlemap.fitmarkers\";\n","export const getMarkersInFolder = (map, folderId) => {\n  const markersInFolder = [];\n  const markers = map.getAllOverlays(\"marker\");\n  markers.forEach((marker) => {\n    if (marker.getExtData().folderId === folderId) {\n      markersInFolder.push(marker);\n    }\n  });\n  return markersInFolder;\n};\n","export const SHOW_MARKERS_TOPIC = \"amap.showmarkers\"; // TODO duplicated with src/Application/Map/index.jsx\nexport const HIDE_MARKERS_TOPIC = \"amap.hidemarkers\"; // TODO duplicated with src/Application/Map/index.jsx\nexport const REMOVE_MARKERS_IN_FOLDER_TOPIC = \"amap.removemarkersinfolder\";\n","import React, { Component } from \"react\";\nimport { Map } from \"react-amap\";\nimport PubSub from \"pubsub-js\";\nimport debugModule from \"debug\";\n\nimport { FIT_MARKERS_TOPIC } from \"../constants\";\nimport { getMarkersInFolder } from \"./helpers\";\nimport {\n  SHOW_MARKERS_TOPIC,\n  HIDE_MARKERS_TOPIC,\n  REMOVE_MARKERS_IN_FOLDER_TOPIC,\n} from \"./constants\";\n\nimport \"./index.css\";\n\nconst debug = debugModule(\"photo-map:src/Application/Map/AMap/index.jsx\");\n\nexport const ADD_MARKERS_TOPIC = \"amap.addmarkers\";\nexport const REMOVE_ALL_MARKERS_TOPIC = \"amap.removeallmarkers\";\n\n/**\n * AMap\n * @export\n * @class AMap\n * @extends {Component}\n *\n * How to use AMap API\n * ```js\n * const {map} = this.aMapRef.current\n * // map.getAllOverlays()\n * // map.setFitView()\n * ```\n * window.AMap is init in original amap lib\n */\nexport default class AMap extends Component {\n  // AMap instance\n  map = null;\n  // An array of AMap.Marker instances\n  allMarkers = [];\n\n  componentDidMount() {\n    this.addSubscribers();\n  }\n\n  componentWillUnmount() {\n    this.removeSubscribers();\n  }\n\n  addSubscribers = () => {\n    this.addMarkersToken = PubSub.subscribe(\n      ADD_MARKERS_TOPIC,\n      this.addMarkersSubscriber\n    );\n    this.removeAllMarkersToken = PubSub.subscribe(\n      REMOVE_ALL_MARKERS_TOPIC,\n      this.removeAllMarkersSubscriber\n    );\n    this.removeMarkersInFolderToken = PubSub.subscribe(\n      REMOVE_MARKERS_IN_FOLDER_TOPIC,\n      this.removeMarkersInFolderSubscriber\n    );\n    this.showMarkersToken = PubSub.subscribe(\n      SHOW_MARKERS_TOPIC,\n      this.showMarkersSubscriber\n    );\n    this.hideMarkersToken = PubSub.subscribe(\n      HIDE_MARKERS_TOPIC,\n      this.hideMarkersSubscriber\n    );\n    this.fitMarkersToken = PubSub.subscribe(\n      FIT_MARKERS_TOPIC,\n      this.fitMarkersSubscriber\n    );\n  };\n\n  removeSubscribers = () => {\n    PubSub.unsubscribe(this.addMarkersToken);\n    PubSub.unsubscribe(this.removeAllMarkersToken);\n    PubSub.unsubscribe(this.removeMarkersInFolderToken);\n    PubSub.unsubscribe(this.showMarkersToken);\n    PubSub.unsubscribe(this.hideMarkersToken);\n  };\n\n  addMarkersSubscriber = (msg, data) => {\n    this.addMarkers(data.files, data.visible, data.folderId);\n  };\n\n  removeMarkersInFolderSubscriber = (msg, data) => {\n    this.removeMarkersInFolder(data.folderId);\n  };\n\n  removeAllMarkersSubscriber = (msg) => {\n    this.removeAllMarkers();\n  };\n\n  showMarkersSubscriber = (msg, filter) => {\n    this.updateMarkersInFolderVisible(filter.folderId, true);\n  };\n\n  hideMarkersSubscriber = (msg, filter) => {\n    this.updateMarkersInFolderVisible(filter.folderId, false);\n  };\n\n  fitMarkersSubscriber = (msg) => {\n    if (!this.map) {\n      console.error(\"this.map of AMap is undefined!\");\n      return;\n    }\n\n    // Fitbounds to all the markers\n    this.map.setFitView();\n  };\n\n  updateMarkersInFolderVisible = (folderId, visible) => {\n    getMarkersInFolder(this.map, folderId).forEach((marker) => {\n      if (visible) {\n        marker.show();\n      } else {\n        marker.hide();\n      }\n    });\n\n    // Fitbounds to all the markers\n    this.map.setFitView();\n  };\n\n  genMarker = (photo, folderId, visible) =>\n    new window.AMap.Marker({\n      map: this.map,\n      visible,\n      position: photo.lnglat,\n      icon: new window.AMap.Icon({\n        // width/height used in <div> tag which wraps the <img> tag\n        size: new window.AMap.Size(64, 64),\n        image: photo.thumbnail,\n        // width/height used in <img> tag\n        imageSize: new window.AMap.Size(64, 64),\n        // 图标取图偏移量\n        // imageOffset: new AMap.Pixel(-9, -3)\n      }),\n\n      // 设置了 icon 以后，设置 icon 的偏移量，以 icon 的 [center bottom] 为原点\n      // offset: new AMap.Pixel(-13, -30)\n\n      extData: {\n        // folderId=\"__privateFolderId__\" // private folder, because this id will change, we will not use this id\n        // folderId=\"13s5wep_gYYVCroQcFB6nJHMWz8V2Onsr\" // public folder\n        folderId,\n      },\n    });\n\n  addMarkers = (files, visible = true, folderId) => {\n    if (!window.AMap) {\n      alert(\n        \"We are about to convert location from GPS to AMap, but AMap still not loaded!\"\n      );\n      return;\n    }\n\n    const lnglats = [];\n    files.forEach((file) => {\n      lnglats.push([\n        file.imageMediaMetadata.location.longitude,\n        file.imageMediaMetadata.location.latitude,\n      ]);\n    });\n\n    debug(\"window.AMap.convertFrom() loading\");\n    window.AMap.convertFrom(lnglats, \"gps\", (status, result) => {\n      debug(\"window.AMap.convertFrom\", status, result);\n\n      if (result.info === \"ok\") {\n        const photos = result.locations.map((resLnglat, index) => {\n          // resLnglat={Q: 39.877753363716\n          // R: 116.21148084852501\n          // lat: 39.877753\n          // lng: 116.211481}\n          return {\n            lnglat: resLnglat,\n            thumbnail: files[index].thumbnailLink,\n            webViewLink: files[index].webViewLink,\n          };\n        });\n\n        photos.forEach((photo) => {\n          const marker = this.genMarker(photo, folderId, visible);\n          marker.content = `<div><a target=\"_blank\" href=\"${photo.webViewLink}\"><img src=\"${photo.thumbnail}\"></a></div>`;\n          this.allMarkers.push(marker);\n          const markerClick = (event) => {\n            var infoWindow = new window.AMap.InfoWindow({\n              offset: new window.AMap.Pixel(0, -30),\n            });\n            infoWindow.setContent(event.target.content);\n            infoWindow.open(this.map, event.target.getPosition());\n          };\n          marker.on(\"click\", markerClick);\n        });\n\n        // Fitbounds to all the markers\n        this.map.setFitView();\n      }\n    });\n  };\n\n  removeMarkersInFolder = (folderId) => {\n    const markersInFolder = [];\n    const markers = this.map.getAllOverlays(\"marker\");\n    markers.forEach((marker) => {\n      if (marker.getExtData().folderId === folderId) {\n        markersInFolder.push(marker);\n      }\n    });\n    this.map.remove(markersInFolder);\n  };\n\n  removeAllMarkers = () => {\n    this.map.remove(this.allMarkers);\n  };\n\n  render() {\n    const { defaultCenter, defaultZoom } = this.props;\n\n    const events = {\n      created: (instance) => {\n        this.props.onMapInstanceCreated(instance);\n        this.map = instance;\n      },\n      /**\n       * @param {MapsEvent} mapsEvent\n       */\n      click: (mapsEvent) => {\n        debug(\"AMap event: click\", mapsEvent);\n        // @type {LngLat} https://lbs.amap.com/api/javascript-api/reference/core#LngLat\n        const lngLat = mapsEvent.lnglat;\n        console.log(`You click on the AMap, lngLat: ${lngLat.toString()}`);\n      },\n    };\n\n    const layers = [];\n    if (window.AMap) {\n      // https://lbs.amap.com/demo/jsapi-v2/example/layers/satellite/\n      layers.push(new window.AMap.TileLayer.Satellite());\n    }\n\n    // Add onInstanceCreated prop to <Map> will cause events.created not fired.\n    // props definitions of Map component: https://elemefe.github.io/react-amap/components/map#%E5%B1%9E%E6%80%A7%E5%88%97%E8%A1%A8\n    return (\n      <div className=\"amap-wrapper\">\n        <Map\n          amapkey={process.env.REACT_APP_AMAP_API_KEY}\n          version=\"1.4.15\"\n          center={defaultCenter}\n          zoom={defaultZoom}\n          layers={layers}\n          events={events}\n        />\n      </div>\n    );\n  }\n}\n","/**\n * Send Google API request\n * Used to get files from Google Drive\n * @export\n * @param {*} requestOpts\n * @returns\n */\nexport default function gapiRequest(requestOpts) {\n  return new Promise((resolve, reject) => {\n    // https://github.com/google/google-api-javascript-client/blob/master/docs/reference.md#----gapiclientrequestargs--\n    var restRequest = window.gapi.client.request(requestOpts);\n    restRequest.execute((resp) => {\n      resolve(resp);\n    });\n  });\n}\n","import gapiRequest from \"./gapiRequest\";\n\n/**\n * API: https://developers.google.com/drive/api/v3/reference/files/get#request\n * @param {Object} params https://developers.google.com/drive/api/v3/reference/files/get#parameters\n * @returns {Promise<FilesGetResponse>}\n */\nexport const filesGet = async (params) =>\n  await gapiRequest({\n    path: `https://www.googleapis.com/drive/v3/files/${params.fileId}`,\n  });\n\n/**\n * File from Google Drive\n *\n * sample of file\n *\n * ```json\n * {\n *   \"imageMediaMetadata\": {\n *     \"location\": {\n *       \"altitude\": 63.91292952824694,\n *       \"latitude\": 1.87650555555555,\n *       \"longitude\": 103.20539722222223\n *     }\n *   },\n *   \"thumbnailLink\": \"https://lh3.googleusercontent.com/zugQb...tO6f0mfk7-al8xxDb4=s220\",\n *   \"webContentLink\": \"https://drive.google.com/uc?id=1f8...De&export=download\",\n *   \"webViewLink\": \"https://drive.google.com/file/d/1f8...wDe/view?usp=drivesdk\"\n * }\n * ```\n * @typedef {Object} File\n * @property {Object} imageMediaMetadata\n * @property {string} thumbnailLink\n * @property {string} webContentLink\n * @property {string} webViewLink\n */\n\n/**\n * Response of getting files from Google Drive\n *\n * Sample of response\n *\n * ```json\n * {\n *   \"files\": [{\n *     \"thumbnailLink\": \"https://lh3.googleusercontent.com/rSd...220\",\n *     \"imageMediaMetadata\": {\n *       \"location\": {\n *         \"latitude\": 1,\n *         \"longitude\": 103,\n *         \"altitude\": 456\n *       }\n *     }\n *   }]\n * }\n * ```\n *\n * @typedef {Object} FilesListResponse\n * @property {File[]} files\n */\n\n/**\n * API: https://developers.google.com/drive/api/v3/reference/files/list#request\n * @returns {Promise<FilesListResponse>}\n */\nexport const filesList = async (params) =>\n  await gapiRequest({\n    path: \"https://www.googleapis.com/drive/v3/files\",\n    params,\n  });\n","import { filesGet, filesList } from \"../utils/gDriveFilesApi\";\n\nconst filesFields = [\n  \"files/imageMediaMetadata/location\",\n  \"files/thumbnailLink\",\n  \"files/webContentLink\", // original photo link, can used in <img> tag\n  \"files/webViewLink\", // Google Drive link to preview this photo.\n].join(\",\");\n\n// Sample response:\n// {\n//   id: \"1nem5ZFB1xj3NuLT3aknYs7z4KTk6Cya6\"\n//   kind: \"drive#file\"\n//   mimeType: \"application/vnd.google-apps.folder\"\n//   name: \"2020-05-21 莲石湖公园\"\n// }\nexport const getFolderInfo = async (folderId) =>\n  await filesGet({\n    fileId: folderId,\n  });\n\n/**\n * Get all photos in a folder\n * @todo Filter out the response, leave only the photos with GPS locations,\n *       maybe popup some warning about photos without GPS locations.\n * @return {Promise<import(\"../utils/gDriveFilesApi\").FilesListResponse>}\n */\nexport const getPhotosInFolder = async (folderId) =>\n  await filesList({\n    q: `'${folderId}' in parents and (mimeType='image/jpeg' or mimeType='image/png')`, // get files in this folder\n    // fields: \"files/*\", // debug\n    fields: filesFields, // location and photo link\n  });\n\n/**\n * Get private \"Photo Map\" folder in Google Drive\n * resp = {\n *   files: [{\n *     \"kind\": \"drive#file\",\n *     \"id\": \"1Kv...MF\",\n *     \"name\": \"Photo Map\",\n *     \"mimeType\": \"application/vnd.google-apps.folder\"\n *   }]\n * }\n */\nconst getPhotoMapFolder = async () =>\n  await filesList({\n    // Find resource name is \"Photo Map\", type is folder\n    q: \"name='Photo Map' and mimeType='application/vnd.google-apps.folder'\",\n  });\n\n/**\n * Get photos in private \"Photo Map\" folder in Google Drive\n * @export\n * @returns {Promise<import(\"../utils/gDriveFilesApi\").File[]>} Definition for this type: https://developers.google.com/drive/api/v3/reference/files\n */\nexport const getPrivatePhotos = async (setMediaItems) => {\n  const foldersResp = await getPhotoMapFolder();\n  const folderId = foldersResp.files[0].id;\n  const resp = await getPhotosInFolder(folderId);\n  return resp.files;\n};\n","export const GOOGLE_MAP = \"google\";\nexport const A_MAP = \"amap\";\nexport const BAIDU_MAP = \"baidu\";\nexport const DEFAULT_SELECTED_MAP = A_MAP;\n\nexport const PRIVATE_FOLDER_ID = \"__privateFolderId__\";\n","import React, { Component } from \"react\";\nimport { Checkbox, Button, Popconfirm } from \"antd\";\nimport PubSub from \"pubsub-js\";\nimport debugModule from \"debug\";\n\nimport {\n  SHOW_MARKERS_TOPIC,\n  HIDE_MARKERS_TOPIC,\n  REMOVE_MARKERS_IN_FOLDER_TOPIC,\n} from \"../Map/AMap/constants\";\nimport { PRIVATE_FOLDER_ID } from \"../constants\";\n\nconst debug = debugModule(\n  \"photo-map:src/Application/MenuDrawer/FolderList.jsx\"\n);\n\nexport const ADD_PUBLIC_FOLDER_TOPIC = \"publicfolder.add\";\nexport const localStorageKeyPublicFolders = \"pmap:publicFolders\";\nexport const localStorageKeyPrivateFolderVisible = \"pmap:privateFolderVisible\";\n\n// Encode the public folders state to save in localStorage\n// React state --(encode)-> localStorage\nexport const encode = (value) => {\n  const content = {};\n  value.forEach((folderInfo) => {\n    content[folderInfo.folderId] = folderInfo.visible;\n  });\n  return JSON.stringify(content);\n};\n// Decode the public folders content in localStorage to save to state\n// localStorage --(decode)-> React state\nexport const decode = () => {\n  return JSON.parse(localStorage.getItem(localStorageKeyPublicFolders));\n};\n\nexport default class FolderList extends Component {\n  state = {\n    // Whether to show photos in the private folder.\n    privateFolderVisible: true,\n    // The folder id, name and visible of public folders.\n    // The key is folder ID from https://drive.google.com/drive/folders/13s5wep_gYYVCroQcFB6nJHMWz8V2Onsr?usp=sharing\n    // [\n    //   {folderId:\"13s5wep_gYYVCroQcFB6nJHMWz8V2Onsr\",visible:true,name:\"Dog Photos\"}\n    // ]\n    publicFolders: [],\n  };\n\n  componentDidMount() {\n    this.addSubscribers();\n\n    // Load state from localStorage\n    this.setState({\n      privateFolderVisible:\n        localStorage.getItem(localStorageKeyPrivateFolderVisible) === \"true\",\n    });\n  }\n\n  componentWillUnmount() {\n    this.removeSubscribers();\n  }\n\n  // turn on/off the visible of private folder\n  handlePrivateFolderCheckboxChange = (event) => {\n    const { checked } = event.target;\n    this.updatePrivateFolderVisible(checked);\n    PubSub.publish(checked ? SHOW_MARKERS_TOPIC : HIDE_MARKERS_TOPIC, {\n      folderId: PRIVATE_FOLDER_ID,\n    });\n  };\n\n  addSubscribers = () => {\n    this.openDrawerToken = PubSub.subscribe(\n      ADD_PUBLIC_FOLDER_TOPIC,\n      this.addPublicFolderSubscriber\n    );\n  };\n\n  removeSubscribers = () => {\n    PubSub.unsubscribe(this.openDrawerToken);\n  };\n\n  addPublicFolderSubscriber = (msg, folderInfo) => {\n    this.addPublicFolder(folderInfo);\n  };\n\n  updatePrivateFolderVisible = (visible) => {\n    this.setState({ privateFolderVisible: visible });\n    localStorage.setItem(localStorageKeyPrivateFolderVisible, visible);\n  };\n\n  /**\n   * @param {FolderInfo} folderInfo\n   * @memberof FolderList\n   */\n  addPublicFolder = (folderInfo) => {\n    const { publicFolders } = this.state;\n    const newPublicFolderState = [...publicFolders, folderInfo];\n    this.setState({\n      publicFolders: newPublicFolderState,\n    });\n    localStorage.setItem(\n      localStorageKeyPublicFolders,\n      encode(newPublicFolderState)\n    );\n  };\n\n  updatePublicFolderVisiable = (folderId, visible) => {\n    const { publicFolders } = this.state;\n    const newState = [...publicFolders];\n    newState.forEach((folderInfo, index) => {\n      if (folderInfo.folderId === folderId) {\n        newState[index] = { ...folderInfo, visible };\n      }\n    });\n    this.setState({\n      publicFolders: newState,\n    });\n    localStorage.setItem(localStorageKeyPublicFolders, encode(newState));\n  };\n\n  updateMarkersVisible = (visible, folderId) => {\n    PubSub.publish(visible ? SHOW_MARKERS_TOPIC : HIDE_MARKERS_TOPIC, {\n      folderId,\n    });\n  };\n\n  removePublicFolder = (folderId) => {\n    this.setState((prevState) => {\n      const newState = prevState.publicFolders.filter(\n        (folderInfo) => folderInfo.folderId !== folderId\n      );\n      localStorage.setItem(localStorageKeyPublicFolders, encode(newState));\n      return { publicFolders: newState };\n    });\n  };\n\n  removeMarkersInFolder = (folderId) => {\n    PubSub.publish(REMOVE_MARKERS_IN_FOLDER_TOPIC, {\n      folderId,\n    });\n  };\n\n  getPhotoCountInFolder = (folderId) => {\n    let photoCountInFolder = \"Unknown count\";\n    const folder = this.props.folders.find(\n      (folder) => folder.folderId === folderId\n    );\n    if (folder) {\n      photoCountInFolder = folder.files.length + \"\";\n    }\n    return photoCountInFolder;\n  };\n\n  renderPublicFolders = () => {\n    const { publicFolders } = this.state;\n\n    if (publicFolders.length === 0) {\n      return \"No data\";\n    }\n\n    return publicFolders.map(this.renderPublicFolder);\n  };\n\n  renderPublicFolder = (folderInfo) => {\n    const { folderId } = folderInfo;\n    const handleChange = (event) => {\n      this.updatePublicFolderVisiable(folderId, event.target.checked);\n      this.updateMarkersVisible(event.target.checked, folderId);\n    };\n\n    const handleDelete = () => {\n      this.removePublicFolder(folderId);\n      this.removeMarkersInFolder(folderId);\n    };\n\n    return (\n      <div key={folderInfo.folderId}>\n        <Checkbox checked={folderInfo.visible} onChange={handleChange}>\n          {folderInfo.folderName} ({this.getPhotoCountInFolder(folderId)}) :{\" \"}\n          {folderInfo.folderId}{\" \"}\n          <Popconfirm\n            title=\"Are you sure delete this folder?\"\n            onConfirm={handleDelete}\n            onCancel={() => {}}\n            okText=\"Yes\"\n            cancelText=\"No\"\n          >\n            <Button size=\"small\" type=\"danger\">\n              Del\n            </Button>\n          </Popconfirm>\n        </Checkbox>\n      </div>\n    );\n  };\n\n  render() {\n    debug(\"render()\", this.props, this.state);\n\n    return (\n      <div>\n        <div>\n          <h3>Private folder in Google Drive</h3>\n          <Checkbox\n            checked={this.state.privateFolderVisible}\n            onChange={this.handlePrivateFolderCheckboxChange}\n          >\n            \"Photo Map\" folder in Google Drive of the login user (\n            {this.getPhotoCountInFolder(PRIVATE_FOLDER_ID)})\n          </Checkbox>\n        </div>\n        <div>\n          <h3>Public folder in Google Drive</h3>\n          {this.renderPublicFolders()}\n        </div>\n      </div>\n    );\n  }\n}\n","export const foldersToBMapPoints = (folders) => {\n  const points = [];\n  folders.forEach((folder) => {\n    folder.files.forEach((file) => {\n      points.push(\n        {\n          lat: file.imageMediaMetadata.location.latitude,\n          lng: file.imageMediaMetadata.location.longitude,\n        } /*BMap.Point*/\n      );\n    });\n  });\n  return points;\n};\n\n// Fit Baidu map to multiple markers like Google Maps fitBounds\n// https://stackoverflow.com/questions/28316976/fit-baidu-map-to-multiple-markers-like-google-maps-fitbounds\nexport const fitBMapMarkers = (map, folders) => {\n  if (!map) {\n    console.log(\"baidu map not loaded!\");\n    return;\n  }\n  if (folders.length === 0) {\n    console.log(\"no folders found, will not fitBMapMarkers for baidu map\");\n    return;\n  }\n  const points = foldersToBMapPoints(folders);\n  map.setViewport(points);\n  console.log(`fit baidu map to ${points.length} markers`);\n};\n\nexport const convert = (points) => {\n  return new Promise(function (resolve, reject) {\n    const translateCallback = (response) => {\n      console.log(\"translateCallback\", response);\n      // status code definition: https://lbsyun.baidu.com/index.php?title=webapi/guide/changeposition\n      if (response.status === 25) {\n        // coords个数非法，超过限制\n        console.log(\"more than limitation of this API\");\n        const ret = reject(new Error(\"more than limitation of this API\"));\n        console.log(\"translateCallback reject\", ret);\n        return ret;\n      }\n      if (response.status !== 0) {\n        return reject(\n          \"unknown error, please check https://lbsyun.baidu.com/index.php?title=webapi/guide/changeposition for more details, response.status: \" +\n            response.status\n        );\n      }\n      resolve(response);\n    };\n    const convertor = new window.BMapGL.Convertor();\n    // https://lbsyun.baidu.com/cms/jsapi/reference/jsapi_reference.html#a7b49\n    // https://lbsyun.baidu.com/index.php?title=webapi/guide/changeposition\n    convertor.translate(points, 1, 5, translateCallback); //真实经纬度转成百度坐标\n  });\n};\n","export const chunk = (array, length) => {\n  const chunks = [];\n  var i, j;\n  for (i = 0, j = array.length; i < j; i += length) {\n    // do whatever\n    chunks.push(array.slice(i, i + length));\n  }\n  return chunks;\n};\n","import PubSub from \"pubsub-js\";\n\nimport { getFolderInfo, getPhotosInFolder } from \"../helpers/filesListHelpers\";\nimport {\n  localStorageKeyPrivateFolderVisible,\n  localStorageKeyPublicFolders,\n} from \"../MenuDrawer/FolderList\";\nimport { ADD_MARKERS_TOPIC } from \"./AMap\";\nimport { PRIVATE_FOLDER_ID } from \"../constants\";\nimport { foldersToBMapPoints, convert } from \"./BaiduMap/helpers\";\nimport { chunk } from \"../utils/utils\";\n\n/**\n * Some photos in one folder\n *\n * Sample of response\n *\n * ```json\n * {\n *   \"files\": [{\n *     \"thumbnailLink\": \"https://lh3.googleusercontent.com/rSd...220\",\n *     \"imageMediaMetadata\": {\n *       \"location\": {\n *         \"latitude\": 1,\n *         \"longitude\": 103,\n *         \"altitude\": 456\n *       }\n *     }\n *   }],\n *   \"visible\": true,\n *   \"folderId\": \"\",\n *   \"folderName\": \"\"\n * }\n * ```\n *\n * @typedef {Object} PhotoFolder\n * @property {string} folderId\n * @property {import(\"../utils/gDriveFilesApi\").File[]} files\n * @property {boolean} [visible]\n * @property {string} [folderName]\n */\n\n/**\n * @return {Promise<PhotoFolder>}\n */\nexport const getPhotosInPublicFolder = async (folderId) => {\n  const folderInfo = await getFolderInfo(folderId);\n  // Get photos from public folder\n  const resp = await getPhotosInFolder(folderId);\n  if (resp.error) {\n    console.error(\"Failed to get photos in a public folders, response:\", resp);\n    throw new Error(resp.error.message);\n  }\n  return {\n    files: resp.files,\n    visible: true,\n    folderId,\n    folderName: folderInfo.name,\n  };\n};\n\n/**\n * @return {Promise<PhotoFolder[]>}\n */\nexport const getPublicFoldersWithPhoto = async () => {\n  const foldersObj = JSON.parse(\n    localStorage.getItem(localStorageKeyPublicFolders)\n  );\n  if (!foldersObj) {\n    return [];\n  }\n  return await Promise.all(\n    Object.keys(foldersObj).map(async (folderId) => {\n      return await getPhotosInPublicFolder(folderId);\n    })\n  );\n};\n\n// /** Provides information about files and allows JavaScript in a web page to access their content. */\n// interface File extends Blob {\n//   readonly lastModified: number;\n//   readonly name: string;\n// }\n\n/**\n * Add photos in both private and public Google Drive folders to AMap\n * @param {import(\"../utils/gDriveFilesApi\").File[]} files\n * @return {undefined}\n */\nexport const addMarkersToAMap = async (files) => {\n  const privateFolder = {\n    files,\n    visible:\n      localStorage.getItem(localStorageKeyPrivateFolderVisible) === \"true\",\n    folderId: PRIVATE_FOLDER_ID,\n  };\n  PubSub.publish(ADD_MARKERS_TOPIC, privateFolder);\n\n  const publicFolders = await getPublicFoldersWithPhoto();\n  publicFolders.forEach((folder) => PubSub.publish(ADD_MARKERS_TOPIC, folder));\n};\n\nexport const getGpsBMapPointsMapping = async (folders) => {\n  const gpsPoints = foldersToBMapPoints(folders);\n  const chunkOfGpsPoints = chunk(gpsPoints, 10);\n\n  const responses = await Promise.all(\n    chunkOfGpsPoints.map(async (gpsPoints) => {\n      const response = await convert(gpsPoints);\n      return {\n        gpsPoints,\n        bMapPoints: response.points,\n      };\n    })\n  );\n\n  const gpsBMapPointsMapping = {};\n  responses.forEach((item) => {\n    item.gpsPoints.forEach((gpsPoint, index) => {\n      const bMapPoint = item.bMapPoints[index];\n      gpsBMapPointsMapping[`${gpsPoint.lat},${gpsPoint.lng}`] = bMapPoint;\n    });\n  });\n\n  return gpsBMapPointsMapping;\n};\n","import React from \"react\";\nimport { Radio } from \"antd\";\nimport debugModule from \"debug\";\nimport get from \"lodash.get\";\n\nimport { GOOGLE_MAP, A_MAP, BAIDU_MAP } from \"../constants\";\n\nconst debug = debugModule(\"photo-map:src/Application/MapSelector.jsx\");\n\nconst radioStyle = {\n  display: \"block\",\n  height: \"30px\",\n  lineHeight: \"30px\",\n};\n\nexport default function MapSelector(props) {\n  debug(\"render()\");\n\n  const { selectedMap } = props;\n\n  const handleChange = (event) => {\n    props.onChange && props.onChange(event.target.value);\n  };\n\n  return (\n    <div className=\"map-selector\">\n      <h3>Choose Map:</h3>\n      <Radio.Group onChange={handleChange} value={selectedMap}>\n        <Radio style={radioStyle} value={A_MAP}>\n          AMap ({get(window, \"AMap.v\")})\n        </Radio>\n        <Radio style={radioStyle} value={BAIDU_MAP}>\n          Baidu Map ({get(window, \"BMapGL.version\")})\n        </Radio>\n        <Radio style={radioStyle} value={GOOGLE_MAP}>\n          Google Maps\n        </Radio>\n      </Radio.Group>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport ReactGA from \"react-ga\";\n\nimport HelpTip from \"../components/HelpTip\";\n\nexport default class Title extends Component {\n  render() {\n    return (\n      <span>\n        Photo Map{\" \"}\n        <HelpTip>\n          <div>\n            Please read the{\" \"}\n            <ReactGA.OutboundLink\n              eventLabel=\"HowToUse\"\n              to=\"https://github.com/photo-map/photo-map.github.io/blob/master/help/HOW_TO_USE.md#how-to-use\"\n              target=\"_blank\"\n            >\n              How to use\n            </ReactGA.OutboundLink>{\" \"}\n            document in GitHub repo.\n          </div>\n        </HelpTip>\n      </span>\n    );\n  }\n}\n","import ReactGA from \"react-ga\";\nimport debugModule from \"debug\";\n\nconst debug = debugModule(\n  \"photo-map:src/Application/helpers/renderGoogleLoginBtn.js\"\n);\n\nexport default function renderGoogleLoginBtn(props, auth2) {\n  debug(\"renderGoogleLoginBtn()\", props, auth2);\n\n  /**\n   * User signed in by clicking button.\n   * @param {gapi.auth2.GoogleUser} user\n   */\n  const onSuccess = (user) => {\n    debug(\"onSuccess()\", user);\n    debug(\"User signed in by clicking button.\");\n    ReactGA.event({\n      category: \"Auth\",\n      action: \"User login\",\n    });\n    props.onLoginSuccess(user);\n  };\n  const onFailure = (error) => {\n    debug(\"onFailure(), error:\", error);\n  };\n  /**\n   * @param {bool} a\n   */\n  const signinChanged = (a) => {\n    debug(\"signinChanged()\", a);\n  };\n  /**\n   * @param {gapi.auth2.GoogleUser} user\n   */\n  const userChanged = (user) => {\n    debug(\"userChanged()\", user);\n  };\n  auth2.attachClickHandler(\n    \"custom-google-login-button\",\n    {},\n    onSuccess,\n    onFailure\n  );\n\n  auth2.isSignedIn.listen(signinChanged);\n  // API: https://developers.google.com/identity/sign-in/web/reference#googleauthcurrentuserlistenlistener\n  auth2.currentUser.listen(userChanged); // This is what you use to listen for user changes\n\n  window.gapi.load(\"signin2\", () => {\n    debug(\"signin2 loaded\");\n\n    /**\n     * User already signed in when rendering button.\n     * @param {gapi.auth2.GoogleUser} user\n     */\n    const handleSuccess = (user) => {\n      debug(\"handleSuccess()\", user);\n      debug(\"User already signed in when rendering button.\");\n      props.onLoginSuccess(user);\n    };\n    const handleFailure = (a, b, c) => {\n      debug(\"handleFailure\", a, b, c);\n    };\n\n    // API https://developers.google.com/identity/sign-in/web/reference#gapisignin2renderid_options\n    window.gapi.signin2.render(\"custom-google-login-button\", {\n      onsuccess: handleSuccess,\n      onfailure: handleFailure,\n    });\n\n    props.onRenderFinish();\n  });\n}\n","import React, { Component } from \"react\";\nimport ReactGA from \"react-ga\";\nimport debugModule from \"debug\";\n\nimport { gapiOAuthClientId } from \"../config\";\nimport renderGoogleLoginBtn from \"../helpers/renderGoogleLoginBtn\";\n\nconst debug = debugModule(\n  \"photo-map:src/Application/MenuDrawer/GoogleLogin.jsx\"\n);\nconst scopeNeeded = [\n  \"profile\",\n  \"email\",\n  \"https://www.googleapis.com/auth/drive\",\n  // \"https://www.googleapis.com/auth/photoslibrary.readonly\",\n].join(\" \");\n\n/**\n * Google Login Button\n * ## References\n * - https://developers.google.com/identity/sign-in/web/build-button#customizing_the_automatically_rendered_sign-in_button_recommended\n * - https://stackoverflow.com/questions/31610461/using-google-sign-in-button-with-react\n * - https://developers.google.com/identity/sign-in/web/reference#gapisignin2renderid_options\n */\nexport default class GoogleLogin extends Component {\n  state = {\n    gapiAuth2Loaded: false,\n    signedIn: false,\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n\n    const onGapiAuth2Loaded = () => {\n      debug(\"auth2 loaded\");\n\n      if (!this.mounted) {\n        // For example, this component loaded, but then page crashs, so this component is umounted\n        console.warn(\"GoogleLogin is umounted when onGapiAuth2Loaded()!\");\n        return;\n      }\n      this.setState({ gapiAuth2Loaded: true });\n\n      const auth2 = window.gapi.auth2.init({\n        client_id: gapiOAuthClientId,\n        scope: scopeNeeded,\n      });\n\n      renderGoogleLoginBtn(\n        {\n          onLoginSuccess: (user) => {\n            if (!this.mounted) {\n              console.warn(\"GoogleLogin is umounted when onLoginSuccess()!\");\n            }\n            this.setState({ signedIn: true });\n            this.props.onLoginSuccess(user);\n          },\n          onRenderFinish: this.props.onRenderFinish,\n        },\n        auth2\n      );\n    };\n\n    // https://github.com/google/google-api-javascript-client/blob/master/docs/reference.md#----gapiloadlibraries-callbackorconfig------\n    window.gapi.load(\"auth2\", onGapiAuth2Loaded);\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleSignOutBtnClick = () => {\n    // https://developers.google.com/identity/sign-in/web/reference#gapiauth2getauthinstance\n    const googleAuth = window.gapi.auth2.getAuthInstance();\n    googleAuth.signOut().then(() => {\n      debug(\"User signed out by clicking button.\");\n      ReactGA.event({\n        category: \"Auth\",\n        action: \"User logout\",\n      });\n      this.setState({ signedIn: false });\n      this.props.onSignedOut();\n    });\n  };\n\n  renderLoginBtn = () => {\n    const googleAuth = window.gapi.auth2.getAuthInstance();\n\n    if (googleAuth && googleAuth.isSignedIn.get()) {\n      // Already signed in, hide login button.\n      return null;\n    }\n\n    // TODO need to call gapi to render the button again on this empty tag\n    return <div id=\"custom-google-login-button\" />;\n  };\n\n  renderSignOutBtn = () => {\n    if (!this.state.signedIn) {\n      return null;\n    }\n    return <button onClick={this.handleSignOutBtnClick}>Sign out</button>;\n  };\n\n  render() {\n    if (!this.state.gapiAuth2Loaded) {\n      return <div>The \"auth2\" gapi library doesn't loaded yet.</div>;\n    }\n\n    return (\n      <div>\n        <h3>Google Login</h3>\n        {this.renderLoginBtn()}\n        {this.renderSignOutBtn()}\n      </div>\n    );\n  }\n}\n","export const gaTrackId = \"UA-48270916-5\";\nexport const gapiOAuthClientId =\n  \"769870583187-6p6tvl5nh7qc8m9hrgqh285siqm9oc37.apps.googleusercontent.com\";\n","import {\n  localStorageKeyPrivateFolderVisible,\n  localStorageKeyPublicFolders,\n} from \"./FolderList\";\nimport { localStorageKeySelectedMap } from \"../Map/constants\";\n\n/**\n * Convert folder web link: https://drive.google.com/drive/folders/13s5wep_gYYVCroQcFB6nJHMWz8V2Onsr?usp=sharing\n * to folder ID: 13s5wep_gYYVCroQcFB6nJHMWz8V2Onsr\n * @param {string} link\n * @returns {string}\n */\nexport const link2Id = (link) =>\n  link\n    .replace(\"https://drive.google.com/drive/folders/\", \"\")\n    .replace(\"?usp=sharing\", \"\");\n\nexport const exportConfig = (localStorage) => {\n  const storageObj = {\n    [localStorageKeyPrivateFolderVisible]: localStorage.getItem(\n      localStorageKeyPrivateFolderVisible\n    ),\n    [localStorageKeyPublicFolders]: localStorage.getItem(\n      localStorageKeyPublicFolders\n    ),\n    [localStorageKeySelectedMap]: localStorage.getItem(\n      localStorageKeySelectedMap\n    ),\n  };\n  const dataStr =\n    \"data:text/json;charset=utf-8,\" +\n    encodeURIComponent(JSON.stringify(storageObj, null, 2));\n  return dataStr;\n};\n\nexport const importConfig = (localStorage, configObj) => {\n  localStorage.setItem(\n    localStorageKeyPrivateFolderVisible,\n    configObj[localStorageKeyPrivateFolderVisible]\n  );\n  localStorage.setItem(\n    localStorageKeyPublicFolders,\n    configObj[localStorageKeyPublicFolders]\n  );\n  localStorage.setItem(\n    localStorageKeySelectedMap,\n    configObj[localStorageKeySelectedMap]\n  );\n};\n","import React, { Component } from \"react\";\nimport { Button } from \"antd\";\n\nimport { exportConfig, importConfig } from \"./helpers\";\n\nexport default class ConfigSection extends Component {\n  constructor(props) {\n    super(props);\n    this.downloadRef = React.createRef();\n    this.inputRef = React.createRef();\n    this.state = {\n      href: \"{}\",\n    };\n  }\n\n  handleDownload = () => {\n    this.setState({ href: exportConfig(localStorage) }, () => {\n      if (this.downloadRef && this.downloadRef.current) {\n        this.downloadRef.current.click();\n      } else {\n        alert(\"downloadRef or node is undefined!\");\n      }\n    });\n  };\n\n  handleImport = () => {\n    if (this.inputRef && this.inputRef.current) {\n      this.inputRef.current.click();\n    } else {\n      alert(\"inputRef or node is undefined!\");\n    }\n  };\n\n  // Solution A: https://stackoverflow.com/a/27116209/4685522\n  // Solution B: https://stackoverflow.com/a/48176648/4685522\n  handleChange = async (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      const data = await new Response(file).text();\n      var obj = JSON.parse(data);\n      importConfig(localStorage, obj);\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <h3>Import/Export application config</h3>\n        <a\n          ref={this.downloadRef}\n          href={this.state.href}\n          style={{ display: \"none\" }}\n          download=\"photo-map-config.json\"\n        >\n          Download Config File\n        </a>\n        <Button onClick={this.handleDownload}>Export</Button>\n        <input\n          ref={this.inputRef}\n          className=\"import-config-file-helper\"\n          type=\"file\"\n          style={{ display: \"none\" }}\n          onChange={this.handleChange}\n        />\n        <Button onClick={this.handleImport}>Import</Button>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Drawer, Button, Input, message } from \"antd\";\nimport PubSub from \"pubsub-js\";\nimport debugModule from \"debug\";\n\nimport HelpTip from \"../components/HelpTip\";\nimport { ADD_MARKERS_TOPIC } from \"../Map/AMap\";\nimport { getPhotosInPublicFolder } from \"../Map/helpers\";\nimport MapSelector from \"../Map/MapSelector\";\n\nimport FolderList, { ADD_PUBLIC_FOLDER_TOPIC, decode } from \"./FolderList\";\nimport Title from \"./Title\";\nimport GoogleLogin from \"./GoogleLogin\";\nimport ConfigSection from \"./ConfigSection\";\nimport { link2Id } from \"./helpers\";\n\nconst debug = debugModule(\"photo-map:src/Application/MenuDrawer/index.jsx\");\n\n// Open it\nexport const OPEN_DRAWER_TOPIC = \"menudrawer.open\";\n// Open or close it according to the state\nexport const OPEN_CLOSE_DRAWER_TOPIC = \"menudrawer.openclose\";\n\nexport default class MenuDrawer extends Component {\n  state = {\n    drawerVisible: false,\n    publicFolderLink: \"\",\n    loading: false,\n  };\n\n  componentDidMount() {\n    this.addSubscribers();\n  }\n\n  componentWillUnmount() {\n    this.removeSubscribers();\n  }\n\n  handleDrawerClose = () => {\n    this.setVisible(false);\n  };\n\n  handlePublicFolderLinkChange = (event) => {\n    this.setState({ publicFolderLink: event.target.value });\n  };\n\n  handlePublicFolderInputPressEnter = () => {\n    this.loadPublicFolderAndAddMarkers();\n  };\n\n  handleLoadPublicFolderBtnClick = () => {\n    this.loadPublicFolderAndAddMarkers();\n  };\n\n  loadPublicFolderAndAddMarkers = async () => {\n    if (this.state.loading) {\n      message.warn(\n        \"Previous public folder is loading now, please wait a moment.\"\n      );\n      return;\n    }\n\n    const folderId = link2Id(this.state.publicFolderLink);\n\n    // Check whether folder exists\n    if (decode()[folderId] !== undefined) {\n      message.warn(\"There is an existing public folder!\");\n      return;\n    }\n\n    let folderInfo = null;\n    try {\n      this.setState({ loading: true });\n      folderInfo = await getPhotosInPublicFolder(folderId);\n      this.setState({ loading: false });\n    } catch (error) {\n      console.error(\"failed to get photos in a public folder, error:\", error);\n      message.error(error.message);\n      this.setState({ loading: false });\n      return;\n    }\n\n    PubSub.publish(ADD_PUBLIC_FOLDER_TOPIC, folderInfo);\n    PubSub.publish(ADD_MARKERS_TOPIC, folderInfo);\n  };\n\n  setVisible = (visible) => {\n    this.setState({ drawerVisible: visible });\n  };\n\n  openDrawerSubscriber = (msg) => {\n    this.setVisible(true);\n  };\n\n  openCloseDrawerSubscriber = (msg) => {\n    this.setVisible(!this.state.drawerVisible);\n  };\n\n  addSubscribers = () => {\n    this.openDrawerToken = PubSub.subscribe(\n      OPEN_DRAWER_TOPIC,\n      this.openDrawerSubscriber\n    );\n    this.openCloseDrawerToken = PubSub.subscribe(\n      OPEN_CLOSE_DRAWER_TOPIC,\n      this.openCloseDrawerSubscriber\n    );\n  };\n\n  removeSubscribers = () => {\n    PubSub.unsubscribe(this.openDrawerToken);\n  };\n\n  render() {\n    debug(\"render()\");\n\n    const { selectedMap } = this.props;\n    const { drawerVisible, publicFolderLink } = this.state;\n\n    return (\n      <div className=\"menu-drawer\">\n        <Drawer\n          className=\"menu-drawer\"\n          width={\"50%\"}\n          title={<Title />}\n          placement=\"left\"\n          closable={false}\n          forceRender\n          visible={drawerVisible}\n          onClose={this.handleDrawerClose}\n        >\n          <MapSelector\n            selectedMap={selectedMap}\n            onChange={this.props.onMapChange}\n          />\n          <GoogleLogin\n            onLoginSuccess={this.props.onLoginSuccess}\n            onRenderFinish={this.props.onRenderFinish}\n            onSignedOut={this.props.onSignedOut}\n          />\n          <div>\n            <div>\n              Public folder link:{\" \"}\n              <HelpTip>\n                <div>\n                  <div>Please fill the public folder link. For example:</div>\n                  <div>\n                    https://drive.google.com/drive/folders/13s5wep_gYYVCroQcFB6nJHMWz8V2Onsr?usp=sharing\n                  </div>\n                </div>\n              </HelpTip>\n            </div>\n            <Input\n              value={publicFolderLink}\n              onChange={this.handlePublicFolderLinkChange}\n              onPressEnter={this.handlePublicFolderInputPressEnter}\n            />\n            <Button\n              disabled={this.state.loading}\n              onClick={this.handleLoadPublicFolderBtnClick}\n            >\n              Load\n            </Button>\n            <hr />\n            <FolderList folders={this.props.folders} />\n            <hr />\n            <ConfigSection />\n          </div>\n        </Drawer>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./index.css\";\n\n/**\n * Render some messages like loading gapi or others\n * These message will be above the map\n */\nexport default function Message(props) {\n  const { message } = props;\n  if (!message) {\n    return null;\n  }\n  return (\n    <div className=\"message-wrapper\">\n      <div className=\"message-body\">\n        <span className=\"message-content\">{message}</span>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { GoogleMap } from \"react-google-maps\";\n\n/**\n * google.maps.LatLng\n * @typedef {Object} LatLng\n */\n\n/**\n * This object is returned from various mouse events on the map and overlays, and contains all the fields shown below.\n * Checkout the {@link https://developers.google.com/maps/documentation/javascript/reference/map#MouseEvent API document}\n * @typedef {Object} MouseEvent\n * @property {LatLng} latLng\n */\n\n/**\n * Checkout the {@link https://developers.google.com/maps/documentation/javascript/reference/map#Map.click API document} for this \"click\" event\n * @param {MouseEvent} event\n */\nfunction handleClick(event) {\n  // @type {LatLng} https://developers.google.com/maps/documentation/javascript/reference/coordinates#LatLng\n  const { latLng } = event;\n  console.log(`You click on the Google Maps, latLng: ${latLng.toString()}`);\n}\n\nconst GoogleMapWrapper = (props) => (\n  <GoogleMap\n    defaultZoom={props.defaultZoom}\n    defaultCenter={props.defaultCenter}\n    defaultOptions={{\n      mapTypeControlOptions: {\n        // style: window.google.maps.MapTypeControlStyle.HORIZONTAL_BAR,\n        position: window.google.maps.ControlPosition.TOP_RIGHT,\n      },\n    }}\n    mapTypeId=\"satellite\"\n    ref={props.refCallback}\n    onClick={handleClick}\n  >\n    {props.children}\n  </GoogleMap>\n);\n\nGoogleMapWrapper.propTypes = {\n  onMapMounted: PropTypes.func.isRequired,\n  onMapUnmounted: PropTypes.func.isRequired,\n};\n\nexport default GoogleMapWrapper;\n","import React from \"react\";\nimport { compose, withProps, withHandlers } from \"recompose\";\nimport { withScriptjs, withGoogleMap } from \"react-google-maps\";\nimport debugModule from \"debug\";\n\nconst debug = debugModule(\n  \"photo-map:src/Application/Map/GoogleMap/GoogleMapCompose.jsx\"\n);\n\nconst GoogleMapCompose = compose(\n  withProps((ownerProps) => ({\n    googleMapURL: `https://maps.googleapis.com/maps/api/js?key=${process.env.REACT_APP_GOOGLE_MAPS_API_KEY}&v=3.exp&libraries=geometry,drawing,places`,\n    loadingElement: <div style={{ height: \"100%\" }} />,\n    containerElement: <div style={{ height: \"100vh\" }} />,\n    mapElement: <div style={{ height: \"100%\" }} />,\n  })),\n  withHandlers((ownerProps) => {\n    const refs = {\n      map: undefined,\n    };\n\n    return {\n      /**\n       * React will call the `ref` callback with the DOM element when the component mounts,\n       * and call it with `null` when it unmounts.\n       * @see https://reactjs.org/docs/refs-and-the-dom.html\n       */\n      refCallback: () => (ref) => {\n        debug(\"refCallback()()\", ref);\n        refs.map = ref;\n\n        if (ref === null) {\n          ownerProps.onMapUnmounted();\n          return;\n        }\n        ownerProps.onMapMounted(ref);\n      },\n      // onZoomChanged: ({ onZoomChange }) => () => {\n      //   onZoomChange(refs.map.getZoom())\n      // }\n    };\n  }),\n  withScriptjs,\n  withGoogleMap\n);\n\nexport default GoogleMapCompose;\n","import React, { useState } from \"react\";\nimport { Marker, InfoWindow } from \"react-google-maps\";\n\nexport default function PhotoMarker(props) {\n  const [open, setOpen] = useState(false);\n\n  return (\n    <Marker {...props} onClick={() => setOpen(true)}>\n      {open && (\n        <InfoWindow onCloseClick={() => setOpen(false)}>\n          <div className=\"photo-marker-info-window\">\n            <a href={props.icon.url} target=\"_blank\" rel=\"noopener noreferrer\">\n              <img src={props.icon.url} alt=\"Photos\" />\n            </a>\n          </div>\n        </InfoWindow>\n      )}\n    </Marker>\n  );\n}\n","export const fitGoogleMapMarkers = (map, folders) => {\n  if (folders.length === 0) {\n    return;\n  }\n\n  // @type {google.maps.LatLngBounds} https://developers.google.com/maps/documentation/javascript/reference/coordinates#LatLngBounds\n  const bounds = new window.google.maps.LatLngBounds();\n\n  folders.forEach((folder) => {\n    if (folder.visible === false) return;\n    folder.files.forEach((file) => {\n      // extend(point), point is type of LatLng\n      bounds.extend({\n        lat: file.imageMediaMetadata.location.latitude,\n        lng: file.imageMediaMetadata.location.longitude,\n      });\n    });\n  });\n\n  map.fitBounds(bounds);\n};\n","import React, { Component } from \"react\";\nimport { Marker } from \"react-google-maps\";\nimport PubSub from \"pubsub-js\";\nimport debugModule from \"debug\";\n\nimport { FIT_MARKERS_TOPIC } from \"../../constants\";\nimport GoogleMapWrapper from \"./GoogleMapWrapper\";\nimport GoogleMapCompose from \"./GoogleMapCompose\";\nimport PhotoMarker from \"./PhotoMarker\";\nimport { fitGoogleMapMarkers } from \"./helpers\";\n// import { photoMarker, photoMarker2 } from \"../markers.jsx\";\n\nconst debug = debugModule(\"photo-map:src/Application/Map/GoogleMap/index.jsx\");\nconst GoogleMapComponent = GoogleMapCompose(GoogleMapWrapper);\n\nconst locationGetFromGoogleMap = {\n  lat: 39.873806,\n  lng: 116.22555,\n};\nconst locationGetFromSateliteImage = {\n  lat: 39.872542,\n  lng: 116.219536,\n};\n// const latOffset =locationGetFromGoogleMap.lat-locationGetFromSateliteImage.lat\n// const lngOffset =locationGetFromGoogleMap.lng-locationGetFromSateliteImage.lng\n\n/**\n * Marker - https://developers.google.com/maps/documentation/javascript/markers\n *\n * @param {*} props\n * @returns\n */\n// function GoogleMap(props) {\n\n// }\nclass GoogleMap extends Component {\n  componentDidMount() {\n    this.addSubscribers();\n  }\n\n  componentWillUnmount() {\n    this.removeSubscribers();\n  }\n\n  handleMapMounted = (map) => {\n    debug(\"handleMapMounted()\", map);\n    this.map = map;\n\n    fitGoogleMapMarkers(map, this.props.folders);\n  };\n\n  handleMapUnmounted = () => {\n    debug(\"handleMapUnmounted()\");\n  };\n\n  fitMarkersSubscriber = (msg) => {\n    debug(\"fitMarkersSubscriber()\", msg);\n\n    if (!this.map) {\n      console.error(\"this.map of Google Map is undefined!\");\n      return;\n    }\n\n    fitGoogleMapMarkers(this.map, this.props.folders);\n  };\n\n  addSubscribers = () => {\n    this.fitMarkersToken = PubSub.subscribe(\n      FIT_MARKERS_TOPIC,\n      this.fitMarkersSubscriber\n    );\n  };\n\n  removeSubscribers = () => {\n    PubSub.unsubscribe(this.fitMarkersToken);\n  };\n\n  renderPhotoMarkers = () => {\n    const markers = [];\n    this.props.folders.forEach((folder) => {\n      if (folder.visible === false) return;\n      folder.files.forEach((file) => {\n        const icon = {\n          anchor: { x: 0, y: 0 },\n          labelOrigin: { x: 0, y: 0 },\n          // origin: {x:0,y:0},\n          scaledSize: {\n            // img size\n            height: 64,\n            width: 64,\n          },\n          // size: { // div size\n          //   height: 100,\n          //   width: 200,\n          // },\n          url: file.thumbnailLink,\n        }; /* Icon */\n        markers.push(\n          <PhotoMarker\n            key={JSON.stringify(file)}\n            position={\n              {\n                lat: file.imageMediaMetadata.location.latitude,\n                lng: file.imageMediaMetadata.location.longitude,\n              } /* LatLngLiteral */\n            }\n            icon={icon}\n          />\n        );\n      });\n    });\n    return markers;\n  };\n\n  render() {\n    debug(\"render()\", this.props);\n    const { defaultZoom, defaultCenter, markers } = this.props;\n\n    return (\n      <GoogleMapComponent\n        ref={this.mapRef}\n        defaultZoom={defaultZoom}\n        defaultCenter={defaultCenter}\n        onMapMounted={this.handleMapMounted}\n        onMapUnmounted={this.handleMapUnmounted}\n      >\n        {markers.map(({ ...markerProps }, index) => {\n          return <Marker key={index} {...markerProps}></Marker>;\n        })}\n        <Marker label=\"Map\" position={locationGetFromGoogleMap} />\n        <Marker label=\"Satelite\" position={locationGetFromSateliteImage} />\n        {/*<PhotoMarker {...photoMarker} />\n      <PhotoMarker {...photoMarker2} />*/}\n        {this.renderPhotoMarkers()}\n      </GoogleMapComponent>\n    );\n  }\n}\n\nexport default GoogleMap;\n","import React from \"react\";\nimport GoogleMapReact from \"google-map-react\";\n\nconst AnyReactComponent = ({ text }) => <div>{text}</div>;\n\nexport default class GoogleMapReactWrapper extends React.Component {\n  handleApiLoaded = ({ map, maps }) => {\n    console.log(map, maps);\n  };\n\n  render() {\n    // https://github.com/google-map-react/google-map-react\n    return (\n      <div style={{ height: \"100vh\", width: \"100%\" }}>\n        <GoogleMapReact\n          bootstrapURLKeys={{ key: process.env.REACT_APP_GOOGLE_MAPS_API_KEY }}\n          defaultCenter={this.props.defaultCenter}\n          defaultZoom={this.props.defaultZoom}\n          yesIWantToUseGoogleMapApiInternals\n          onGoogleApiLoaded={this.handleApiLoaded}\n        >\n          <AnyReactComponent lat={59.955413} lng={30.337844} text=\"My Marker\" />\n        </GoogleMapReact>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactGoogleMaps from \"./ReactGoogleMaps\";\nimport GoogleMapReact from \"./GoogleMapReact\";\n\nexport default class GoogleMap extends React.Component {\n  // because react-google-maps is never maintained\n  googleMapReactEnabled = true;\n  render() {\n    if (this.googleMapReactEnabled) {\n      return (\n        <GoogleMapReact\n          defaultZoom={this.props.defaultZoom}\n          defaultCenter={this.props.defaultCenter}\n          markers={this.props.markers}\n          folders={this.props.folders}\n        />\n      );\n    }\n    return (\n      <ReactGoogleMaps\n        defaultZoom={this.props.defaultZoom}\n        defaultCenter={this.props.defaultCenter}\n        markers={this.props.markers}\n        folders={this.props.folders}\n      />\n    );\n  }\n}\n","import PropTypes from \"prop-types\";\n\nconst locationType = PropTypes.shape({\n  latitude: PropTypes.number.isRequired,\n  longitude: PropTypes.number.isRequired,\n  altitude: PropTypes.number.isRequired,\n});\n\nconst imageMediaMetadataType = PropTypes.shape({\n  location: locationType,\n});\n\nconst fileType = PropTypes.shape({\n  webContentLink: PropTypes.string,\n  webViewLink: PropTypes.string,\n  thumbnailLink: PropTypes.string,\n  imageMediaMetadata: imageMediaMetadataType,\n});\n\nexport const folderType = PropTypes.shape({\n  folderId: PropTypes.string.isRequired,\n  files: PropTypes.arrayOf(fileType).isRequired,\n  visible: PropTypes.bool,\n  folderName: PropTypes.string,\n});\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Map, Marker, NavigationControl } from \"react-bmapgl\";\nimport ZoomControl from \"react-bmapgl/Control/ZoomControl\";\n\nimport { folderType } from \"../typedef\";\nimport { fitBMapMarkers } from \"./helpers\";\n\nexport default class BaiduMap extends React.Component {\n  // baidu map, will be null when baidu map unmounts\n  map = null;\n\n  // Will be called when map component unmounts\n  handleMapComponentMountOrUmount = (ref) => {\n    if (ref === null) {\n      console.log(\"baidu map component unmounts\");\n      this.map = null;\n      return;\n    }\n    this.map = ref.map;\n  };\n\n  renderPhotoMarkers = () => {\n    const markers = [];\n    this.props.folders.forEach((folder, folderIndex) => {\n      if (folder.visible === false) return;\n      folder.files.forEach((file, fileIndex) => {\n        const { location } = file.imageMediaMetadata;\n        const bMapPoint =\n          this.props.gpsBMapPointsMapping[\n            `${location.latitude},${location.longitude}`\n          ];\n        if (!bMapPoint) {\n          // console.warn(\n          //   \"bMapPoint not found in gpsBMapPointsMapping, location:\",\n          //   location\n          // );\n          return;\n        }\n        // https://lbsyun.baidu.com/index.php?title=jspopularGL/guide/addOverlay\n        const icon = new window.BMapGL.Icon(\n          file.thumbnailLink,\n          // original thumnbail photo size 220x183\n          new window.BMapGL.Size(64, 64),\n          {\n            // // 指定定位位置。\n            // // 当标注显示在地图上时，其所指向的地理位置距离图标左上\n            // // 角各偏移10像素和25像素。您可以看到在本例中该位置即是\n            // // 图标中央下端的尖角位置。\n            // anchor: new BMapGL.Size(10, 25),\n            // // 设置图片偏移。\n            // // 当您需要从一幅较大的图片中截取某部分作为标注图标时，您\n            // // 需要指定大图的偏移位置，此做法与css sprites技术类似。\n            // imageOffset: new BMapGL.Size(0, 0 - 25), // 设置图片偏移\n          }\n        );\n        markers.push(\n          <Marker\n            key={`folder-${folderIndex}-file-${fileIndex}`}\n            position={bMapPoint}\n            icon={icon}\n          />\n        );\n      });\n    });\n    return markers;\n  };\n\n  render() {\n    fitBMapMarkers(this.map, this.props.folders);\n    // Map props definition: https://lbsyun.baidu.com/solutions/reactBmapDoc\n    // More methods and properties of Map: https://lbsyun.baidu.com/cms/jsapi/reference/jsapi_reference.html\n    return (\n      <Map\n        ref={this.handleMapComponentMounted}\n        style={{ height: \"100vh\", width: \"100%\" }}\n        center={this.props.defaultCenter}\n        zoom={this.props.defaultZoom}\n      >\n        <NavigationControl />\n        <ZoomControl />\n        {this.renderPhotoMarkers()}\n        {/*<Marker position={{ lng: 116.402544, lat: 39.928216 }} />\n        <InfoWindow\n          position={{ lng: 116.402544, lat: 39.928216 }}\n          text=\"内容\"\n          title=\"标题\"\n        />*/}\n      </Map>\n    );\n  }\n}\n\nBaiduMap.propTypes = {\n  defaultCenter: PropTypes.shape({\n    lat: PropTypes.number.isRequired,\n    lng: PropTypes.number.isRequired,\n  }), // BMap.Point\n  defaultZoom: PropTypes.number.isRequired,\n  folders: PropTypes.arrayOf(folderType).isRequired,\n};\n","import React, { Component } from \"react\";\nimport { Button } from \"antd\";\nimport PubSub from \"pubsub-js\";\nimport debugModule from \"debug\";\n\nimport {\n  GOOGLE_MAP,\n  A_MAP,\n  BAIDU_MAP,\n  DEFAULT_SELECTED_MAP,\n  PRIVATE_FOLDER_ID,\n} from \"../constants\";\nimport { getPrivatePhotos } from \"../helpers/filesListHelpers\";\nimport Message from \"../components/Message\";\nimport GoogleMap from \"./GoogleMap\";\n// import { simpleMarker } from \"./markers\";\nimport AMap, { REMOVE_ALL_MARKERS_TOPIC } from \"./AMap\";\nimport BaiduMap from \"./BaiduMap\";\nimport MenuDrawer, { OPEN_DRAWER_TOPIC } from \"../MenuDrawer\";\nimport { ADD_PUBLIC_FOLDER_TOPIC } from \"../MenuDrawer/FolderList\";\nimport {\n  getPublicFoldersWithPhoto,\n  addMarkersToAMap,\n  getGpsBMapPointsMapping,\n} from \"./helpers\";\nimport { localStorageKeySelectedMap, FIT_MARKERS_TOPIC } from \"./constants\";\n\nconst debug = debugModule(\"photo-map:src/Application/Map/index.jsx\");\n\nconst amapCenter = { latitude: 39.871446, longitude: 116.215768 };\nconst googleMapCenter = { lat: 39.871446, lng: 116.215768 };\nconst baiduMapCenter = { lng: 116.215768, lat: 39.871446 };\nconst defaultZoom = 16;\n\nexport const SWITCH_MAP_TOPIC = \"map.switchmap\";\nexport const SHOW_MARKERS_TOPIC = \"amap.showmarkers\"; // TODO duplicated with src/Application/Map/AMap/index.jsx\nexport const HIDE_MARKERS_TOPIC = \"amap.hidemarkers\"; // TODO duplicated with src/Application/Map/AMap/index.jsx\n\n/**\n * The mapping between GPS coordinates and BMap coordinates\n *\n * ```json\n * {\n *   \"1,103\": {\"lat\":1,\"lng\":103},\n *   \"2,103\": {\"lat\":2,\"lng\":103}\n * }\n * ```\n *\n * @typedef {Map<string,BMapPoint>} GpsBMapPointsMapping\n */\n\nexport default class Map extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // Folders in GDrive which contains photos, both private and public folder\n      // [\n      //   {\"folderId\":\"\", \"files\":[]},\n      //   {\"folderId\":\"\", \"files\":[]}\n      // ]\n      /**\n       * @type {import(\"./helpers\").PhotoFolder[]}\n       */\n      folders: [],\n      /**\n       * @type {GpsBMapPointsMapping}\n       */\n      gpsBMapPointsMapping: {},\n      amapLoaded: false,\n      message: \"Rendering Google login button on left side panel...\",\n    };\n\n    this.state.selectedMap =\n      localStorage.getItem(localStorageKeySelectedMap) || DEFAULT_SELECTED_MAP;\n  }\n\n  componentDidMount() {\n    this.addSubscribers();\n  }\n\n  componentWillUnmount() {\n    this.removeSubscribers();\n  }\n\n  handleMapChange = (name) => {\n    this.setMap(name);\n  };\n\n  // GoogleLogin button render finished\n  handleRenderFinish = () => {\n    this.setState({ message: \"\" });\n  };\n\n  /**\n   * User success signed in Google account.\n   * @param {gapi.auth2.GoogleUser} user\n   */\n  handleLoginSuccess = async (user) => {\n    debug(\"handleLoginSuccess\", user);\n\n    this.setState({\n      message: \"Login successfully, try to load photos in Google Drive...\",\n    });\n\n    // Load photos in private folder of login user's Google Drive\n    const privatePhotos = await getPrivatePhotos();\n\n    this.setState({\n      message: \"\",\n    });\n\n    // If private folder alread in state, then update it in state.\n    // If private folder not in state, then push it into state.\n    this.setState((prevState) => {\n      let foundPrivateFolder = false;\n      const folders = prevState.folders.map((folder) => {\n        if (folder.folderId === PRIVATE_FOLDER_ID) {\n          foundPrivateFolder = true;\n          folder.files = privatePhotos;\n        }\n        return folder;\n      });\n      if (!foundPrivateFolder) {\n        folders.push({\n          folderId: PRIVATE_FOLDER_ID,\n          files: privatePhotos,\n        });\n      }\n      return {\n        folders,\n      };\n    });\n\n    // Update public folder in state\n    const publicFolders = await getPublicFoldersWithPhoto();\n    this.setState((prevState) => ({\n      folders: [...prevState.folders, ...publicFolders],\n    }));\n\n    publicFolders.forEach((folderInfo) => {\n      PubSub.publish(ADD_PUBLIC_FOLDER_TOPIC, folderInfo);\n    });\n\n    // Convert to baidu map coordinate system\n    if (window.BMapGL) {\n      const gpsBMapPointsMapping = await getGpsBMapPointsMapping(\n        this.state.folders\n      );\n      this.setState({\n        gpsBMapPointsMapping,\n      });\n    }\n\n    if (this.state.selectedMap === \"amap\") {\n      await addMarkersToAMap(privatePhotos);\n    }\n\n    PubSub.publish(FIT_MARKERS_TOPIC);\n  };\n\n  handleAMapInstanceCreated = (map) => {\n    // window.AMap is init in original amap lib\n    debug(\"handleAMapInstanceCreated()\", window.AMap);\n    this.setState({ amapLoaded: true });\n  };\n\n  handleSignedOut = () => {\n    this.setState({\n      folders: [],\n    });\n    PubSub.publish(REMOVE_ALL_MARKERS_TOPIC);\n  };\n\n  handleDrawerOpen = () => {\n    PubSub.publish(OPEN_DRAWER_TOPIC);\n  };\n\n  addSubscribers = () => {\n    this.switchMapToken = PubSub.subscribe(\n      SWITCH_MAP_TOPIC,\n      this.switchMapSubscriber\n    );\n    this.showMarkersToken = PubSub.subscribe(\n      SHOW_MARKERS_TOPIC,\n      this.showMarkersSubscriber\n    );\n    this.hideMarkersToken = PubSub.subscribe(\n      HIDE_MARKERS_TOPIC,\n      this.hideMarkersSubscriber\n    );\n  };\n\n  removeSubscribers = () => {\n    PubSub.unsubscribe(this.switchMapToken);\n  };\n\n  switchMapSubscriber = () => {\n    this.setMap(this.state.selectedMap === A_MAP ? GOOGLE_MAP : A_MAP);\n  };\n\n  showMarkersSubscriber = (msg, filter) => {\n    this.updateMarkersInFolderVisible(filter.folderId, true);\n  };\n\n  hideMarkersSubscriber = (msg, filter) => {\n    this.updateMarkersInFolderVisible(filter.folderId, false);\n  };\n\n  updateMarkersInFolderVisible = (folderId, visible) => {\n    const newFolders = this.state.folders.map((folder) => {\n      if (folder.folderId === folderId) {\n        folder.visible = visible;\n      }\n      return folder;\n    });\n    this.setState({ folder: newFolders });\n  };\n\n  setMap = (name) => {\n    this.setState({\n      selectedMap: name,\n    });\n    localStorage.setItem(localStorageKeySelectedMap, name);\n  };\n\n  // will reload whole map when switching map\n  renderMap = () => {\n    const { selectedMap, folders } = this.state;\n    if (selectedMap === A_MAP) {\n      return (\n        <AMap\n          defaultCenter={amapCenter}\n          defaultZoom={defaultZoom}\n          onMapInstanceCreated={this.handleAMapInstanceCreated}\n        />\n      );\n    } else if (selectedMap === GOOGLE_MAP) {\n      return (\n        <GoogleMap\n          defaultZoom={defaultZoom}\n          defaultCenter={googleMapCenter}\n          markers={\n            [\n              /*simpleMarker*/\n            ]\n          }\n          folders={folders}\n        />\n      );\n    }\n    return null;\n  };\n\n  // will not reload whole map when swiching map\n  renderMap2 = () => {\n    const { selectedMap, folders } = this.state;\n\n    return (\n      <div className={`selected-map-${selectedMap}`}>\n        <div\n          className={`photo-map-google-map ${\n            selectedMap === GOOGLE_MAP ? \"show\" : \"hide\"\n          }`}\n        >\n          <GoogleMap\n            defaultZoom={defaultZoom}\n            defaultCenter={googleMapCenter}\n            markers={\n              [\n                /*simpleMarker*/\n              ]\n            }\n            folders={folders}\n          />\n        </div>\n        <div\n          className={`photo-map-a-map ${\n            selectedMap === A_MAP ? \"show\" : \"hide\"\n          }`}\n        >\n          <AMap\n            defaultCenter={amapCenter}\n            defaultZoom={16}\n            onMapInstanceCreated={this.handleAMapInstanceCreated}\n          />\n        </div>\n        <div\n          className={`photo-map-baidu-map ${\n            selectedMap === BAIDU_MAP ? \"show\" : \"hide\"\n          }`}\n        >\n          <BaiduMap\n            defaultCenter={baiduMapCenter}\n            defaultZoom={defaultZoom}\n            folders={folders}\n            gpsBMapPointsMapping={this.state.gpsBMapPointsMapping}\n          />\n        </div>\n      </div>\n    );\n  };\n\n  render() {\n    const { selectedMap, message } = this.state;\n\n    return (\n      <div className=\"map-wrapper\">\n        <Message message={message} />\n        {this.renderMap2()}\n        <div className=\"menu-btn-wrapper\">\n          <Button onClick={this.handleDrawerOpen}>Menu</Button>\n        </div>\n        <MenuDrawer\n          selectedMap={selectedMap}\n          folders={this.state.folders}\n          onRenderFinish={this.handleRenderFinish}\n          onLoginSuccess={this.handleLoginSuccess}\n          onSignedOut={this.handleSignedOut}\n          onMapChange={this.handleMapChange}\n        />\n      </div>\n    );\n  }\n}\n","import PubSub from \"pubsub-js\";\nimport ReactGA from \"react-ga\";\n\nimport { gaTrackId } from \"./config\";\nimport { OPEN_CLOSE_DRAWER_TOPIC } from \"./MenuDrawer\";\nimport { SWITCH_MAP_TOPIC } from \"./Map\";\n\nexport const initGa = () => {\n  ReactGA.initialize(gaTrackId, {\n    // debug: true,\n  });\n};\n\nexport const registerShortcut = () => {\n  document.addEventListener(\n    \"keyup\",\n    (event) => {\n      switch (event.code) {\n        // Open or close left menu\n        case \"KeyM\": {\n          PubSub.publish(OPEN_CLOSE_DRAWER_TOPIC);\n          break;\n        }\n        // Switch AMap and Google Maps\n        case \"KeyS\": {\n          PubSub.publish(SWITCH_MAP_TOPIC);\n          break;\n        }\n        default: {\n          break;\n        }\n      }\n    },\n    false\n  );\n};\n\n/**\n * After gapi.client is loaded by gapi.load('client'), then you could use method like:\n * ```\n * gapi.client.request()\n * ```\n * https://github.com/google/google-api-javascript-client/blob/master/samples/simpleRequest.html\n * In this project used to get files from Google Drive\n * @returns {Promise<undefined>}\n */\nexport const initGapiClient = () =>\n  new Promise((resolve, reject) => {\n    window.gapi.load(\"client\", () => {\n      resolve();\n    });\n  });\n","import React from \"react\";\n\nexport default function Warning() {\n  return (\n    <div className=\"website-warning\">\n      <p>Google API not loaded!</p>\n      <p>Maybe you need to turn off the Adblock Plus for this website.</p>\n      <p>\n        If you still have problem, please{\" \"}\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"https://github.com/photo-map/photo-map.github.io/issues\"\n        >\n          raise an issue\n        </a>{\" \"}\n        in the GitHub project.\n      </p>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\n\nimport { initGa, initGapiClient, registerShortcut } from \"./init\";\nimport Warning from \"./Warning\";\nimport Map from \"./Map\";\n\n// Styles for antd\nimport \"antd/dist/antd.css\";\n// Styles for application\nimport \"./index.css\";\n\nexport default class Application extends Component {\n  state = {\n    gapiLoaded: false, // Google API loaded or not\n    gapiClientLoading: false,\n  };\n\n  componentDidMount() {\n    this.initApplication();\n  }\n\n  initApplication = () => {\n    initGa();\n\n    // window.gapiLoadedFlag is defined in public/index.html\n    // This flag is true only when Google API's platform.js is loaded, then we can use window.gapi\n    if (window.gapiLoadedFlag) {\n      this.setState({\n        gapiLoaded: true,\n      });\n      this.loadGapiClient();\n    }\n\n    registerShortcut();\n  };\n\n  loadGapiClient = () => {\n    this.setState({\n      gapiClientLoading: true,\n    });\n    initGapiClient().then(() => {\n      this.setState({\n        gapiClientLoading: false,\n      });\n    });\n  };\n\n  render() {\n    if (!this.state.gapiLoaded) {\n      return <Warning />;\n    }\n\n    if (this.state.gapiClientLoading) {\n      return <div>gapi client lib is loading</div>;\n    }\n\n    return (\n      <div className=\"application photo-map\">\n        <Map />\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n// import App from './App';\nimport Application from \"./Application\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  // <React.StrictMode>\n  //   <App />\n  // </React.StrictMode>,\n  <Application />,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}